













@layer defaults
{
  //
  
  .studk-sequemi-tlwalkthruinlinecomp {
    min-block-size: 45vh;
  }

  table.studk-tbmctableelem, .studk-sequemi-tlwalkthruinlinecomp table {
    // writing-mode: vertical-lr;
    // & :is(td, th) {
    //   writing-mode: initial;
    // }
    --table-cell-orientation: vertical-lr ;
  }

  :is(
    table.studk-tbmctableelem > * > tr 
    ,
    .studk-sequemi-tlwalkthruinlinecomp tr
  )
  {
    //
    
    @if false {
      position: relative;
      z-index: 20;

      &:is(
        tbody > tr[data-src-row-id^="plotsegment-"]
      )
      {
        z-index: 10 ;
      }
    }

  }

  // :is(table.studk-tbmctableelem > * > tr > td):is(*[data-src-col-id])
  // table.studk-tbmctableelem > * > tr > td[data-src-col-id] ,
  // .studk-sequemi-tlwalkthruinlinecomp td[data-src-col-id^="content-layer"]
  :is(
    table.studk-tbmctableelem > * > tr > :is(th, td)
    ,
    .studk-sequemi-tlwalkthruinlinecomp :is(th, td)
  )
  {
    //

    @if true {
      position: relative;
      z-index: 20;
      
      &:is(
        // tbody > tr > *
        tbody > tr[data-src-row-id^="itemident"] > *
      )
      {
        z-index: 25 ;
      }

      &:is(
        // tbody > tr > *
        tbody > tr:where([data-src-row-id^="itemident"], [data-src-row-id^="itemkind"]) > *
      )
      {
        backdrop-filter: blur(0.2ex);
      }

      &:is(
        // tbody > tr > *
        tbody > tr[data-src-row-id^="plotsegment-"] > *
      )
      {
        z-index: 15 ;
      }

      &:is(*[data-src-col-id^="content-layer"] ):is(
        // tbody > tr > *
        tbody > tr[data-src-row-id^="plotsegment-"] > *
      )
      {
        z-index: 10 ;
      }

    }

    &:is(*[data-src-col-id^="content-layer"] ):is(
      // tbody > tr > *
      tbody > tr[data-src-row-id^="plotsegment-"] > *
    )
    {
      background-color: black ;
      border-color: black ;
      color: lightgray;
    }

    &:not(*[data-src-col-id^="content-layer"] ) {
      //
      font-weight: bolder;
      @media screen {
        position: sticky;
        inset-inline-start: 0;
        inset-block-start: 0;
      }
    }

    //
    &:is(*[data-src-col-id^="content-layer"] ) {
      //

      // border: 0.2ex solid blue !important;

      padding-block: 0 ;

      @if false {
        //
        & > * {
          border: 0.2ex solid red;
          display: inline-block;
          vertical-align: top;
        }
        &::after {
          content: "co";
          vertical-align: top;
        }
        & > *, &::after {
          vertical-align: bottom;
        }
      }

      @if false {
        //
        & > * {
          margin-inline: -0.5ex;
        }
      }

      /* https://stackoverflow.com/a/14670886 */
      /* experimental solution using `position: relative` and `position: absolute` even when `display: table-cell`; portability yet to be tried */
      @if true {
        //
        position: relative;
        & > * {
          position: absolute ;
          inset: 0 ;
        }
      }

    }
  }
}





// TODO
@property --t-start {
  syntax: "<number> | auto";
  inherits: true;
  initial-value: auto;
}
@property --t-end {
  syntax: "<number> | auto";
  inherits: true;
  initial-value: auto;
}
@property --sc {
  syntax: "<number>";
  inherits: true;
  initial-value: 1;
}













